var root;(()=>{var __webpack_modules__={978:module=>{eval("class BraidClient {\n  constructor (...endpoint) {\n    if (endpoint === '.') {\n      endpoint = window.location\n    }\n    this.endpoint = endpoint\n    this.initialReconnectDelay = 1000\n    this.currentReconnectDelay = this.initialReconnectDelay\n    this.maxReconnectDelay = 16000\n\n    this.subscribe = this.subscribe.bind(this)\n    this.publish = this.publish.bind(this)\n  }\n\n  currentState () {\n    return fetch(this.endpoint, {\n      credentials: 'same-origin',\n      headers: {\n        accept: 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        return data\n      })\n  }\n\n  subscribe (handler) {\n    const reconnect = () => {\n      console.log(`Reconnecting to braid at: ${this.endpoint}`)\n      setTimeout(() => {\n        if (this.currentReconnectDelay < this.maxReconnectDelay) {\n          this.currentReconnectDelay *= 2\n        }\n        this.subscribe(handler)\n      }, this.currentReconnectDelay + Math.floor(Math.random() * 3000))\n    }\n\n    fetch(this.endpoint, {\n      headers: {\n        credentials: 'same-origin',\n        subscribe: 'keep-alive'\n      }\n    }).then(response => {\n      const reader = response.body.getReader()\n      const decoder = new TextDecoder('utf-8')\n      let buffer = ''\n      reader.read().then(function processText ({ done, value }) {\n        if (done) {\n          console.log('BRAID: end of stream')\n          return\n        }\n        buffer += decoder.decode(value)\n        const headers = {}\n        const patchParts = buffer.split('\\n\\n')\n        patchParts[0].split('\\n').forEach(header => {\n          const headerName = header.slice(0, header.indexOf(':')).toLowerCase()\n          const headerValue = header.slice(header.indexOf(':') + 1)\n          headers[headerName] = headerValue\n        })\n        if (Number(headers['content-length']) === patchParts[1].length) {\n          buffer = ''\n          const range = headers['content-range'].split('=')[1]\n          const body = JSON.parse(patchParts[1])\n          console.log('BRAID: patch received: ', range, body)\n          handler(range, body)\n        }\n        return reader.read().then(processText)\n      }).catch(err => {\n        console.error('BRAID:', err)\n        reconnect()\n      })\n    }).catch(err => {\n      console.error('BRAID:', err)\n      reconnect()\n    })\n  }\n\n  publish (range, body) {\n    const patch = JSON.stringify(body)\n    fetch(this.endpoint, {\n      method: 'PUT',\n      headers: {\n        credentials: 'same-origin',\n        patches: 1\n      },\n      body: `Content-Length: ${patch.length}\nContent-Range: json=${range}\n\n${patch}`\n    }).then(() => {\n      console.log('BRAID: patch sent: ', range, body)\n    })\n  }\n}\n\nmodule.exports = BraidClient\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yb290Ly4uL0JyYWlkLWNsaWVudC5qcy9pbmRleC5qcz9hZjdjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0EsK0NBQStDLGNBQWM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxjQUFjO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLCtCQUErQjtBQUMvQixzQkFBc0I7O0FBRXRCLEVBQUUsTUFBTTtBQUNSLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBIiwiZmlsZSI6Ijk3OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEJyYWlkQ2xpZW50IHtcbiAgY29uc3RydWN0b3IgKC4uLmVuZHBvaW50KSB7XG4gICAgaWYgKGVuZHBvaW50ID09PSAnLicpIHtcbiAgICAgIGVuZHBvaW50ID0gd2luZG93LmxvY2F0aW9uXG4gICAgfVxuICAgIHRoaXMuZW5kcG9pbnQgPSBlbmRwb2ludFxuICAgIHRoaXMuaW5pdGlhbFJlY29ubmVjdERlbGF5ID0gMTAwMFxuICAgIHRoaXMuY3VycmVudFJlY29ubmVjdERlbGF5ID0gdGhpcy5pbml0aWFsUmVjb25uZWN0RGVsYXlcbiAgICB0aGlzLm1heFJlY29ubmVjdERlbGF5ID0gMTYwMDBcblxuICAgIHRoaXMuc3Vic2NyaWJlID0gdGhpcy5zdWJzY3JpYmUuYmluZCh0aGlzKVxuICAgIHRoaXMucHVibGlzaCA9IHRoaXMucHVibGlzaC5iaW5kKHRoaXMpXG4gIH1cblxuICBjdXJyZW50U3RhdGUgKCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLmVuZHBvaW50LCB7XG4gICAgICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYWNjZXB0OiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgICAgLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgIHJldHVybiBkYXRhXG4gICAgICB9KVxuICB9XG5cbiAgc3Vic2NyaWJlIChoYW5kbGVyKSB7XG4gICAgY29uc3QgcmVjb25uZWN0ID0gKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coYFJlY29ubmVjdGluZyB0byBicmFpZCBhdDogJHt0aGlzLmVuZHBvaW50fWApXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuY3VycmVudFJlY29ubmVjdERlbGF5IDwgdGhpcy5tYXhSZWNvbm5lY3REZWxheSkge1xuICAgICAgICAgIHRoaXMuY3VycmVudFJlY29ubmVjdERlbGF5ICo9IDJcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN1YnNjcmliZShoYW5kbGVyKVxuICAgICAgfSwgdGhpcy5jdXJyZW50UmVjb25uZWN0RGVsYXkgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzMDAwKSlcbiAgICB9XG5cbiAgICBmZXRjaCh0aGlzLmVuZHBvaW50LCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGNyZWRlbnRpYWxzOiAnc2FtZS1vcmlnaW4nLFxuICAgICAgICBzdWJzY3JpYmU6ICdrZWVwLWFsaXZlJ1xuICAgICAgfVxuICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgY29uc3QgcmVhZGVyID0gcmVzcG9uc2UuYm9keS5nZXRSZWFkZXIoKVxuICAgICAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigndXRmLTgnKVxuICAgICAgbGV0IGJ1ZmZlciA9ICcnXG4gICAgICByZWFkZXIucmVhZCgpLnRoZW4oZnVuY3Rpb24gcHJvY2Vzc1RleHQgKHsgZG9uZSwgdmFsdWUgfSkge1xuICAgICAgICBpZiAoZG9uZSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdCUkFJRDogZW5kIG9mIHN0cmVhbScpXG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgYnVmZmVyICs9IGRlY29kZXIuZGVjb2RlKHZhbHVlKVxuICAgICAgICBjb25zdCBoZWFkZXJzID0ge31cbiAgICAgICAgY29uc3QgcGF0Y2hQYXJ0cyA9IGJ1ZmZlci5zcGxpdCgnXFxuXFxuJylcbiAgICAgICAgcGF0Y2hQYXJ0c1swXS5zcGxpdCgnXFxuJykuZm9yRWFjaChoZWFkZXIgPT4ge1xuICAgICAgICAgIGNvbnN0IGhlYWRlck5hbWUgPSBoZWFkZXIuc2xpY2UoMCwgaGVhZGVyLmluZGV4T2YoJzonKSkudG9Mb3dlckNhc2UoKVxuICAgICAgICAgIGNvbnN0IGhlYWRlclZhbHVlID0gaGVhZGVyLnNsaWNlKGhlYWRlci5pbmRleE9mKCc6JykgKyAxKVxuICAgICAgICAgIGhlYWRlcnNbaGVhZGVyTmFtZV0gPSBoZWFkZXJWYWx1ZVxuICAgICAgICB9KVxuICAgICAgICBpZiAoTnVtYmVyKGhlYWRlcnNbJ2NvbnRlbnQtbGVuZ3RoJ10pID09PSBwYXRjaFBhcnRzWzFdLmxlbmd0aCkge1xuICAgICAgICAgIGJ1ZmZlciA9ICcnXG4gICAgICAgICAgY29uc3QgcmFuZ2UgPSBoZWFkZXJzWydjb250ZW50LXJhbmdlJ10uc3BsaXQoJz0nKVsxXVxuICAgICAgICAgIGNvbnN0IGJvZHkgPSBKU09OLnBhcnNlKHBhdGNoUGFydHNbMV0pXG4gICAgICAgICAgY29uc29sZS5sb2coJ0JSQUlEOiBwYXRjaCByZWNlaXZlZDogJywgcmFuZ2UsIGJvZHkpXG4gICAgICAgICAgaGFuZGxlcihyYW5nZSwgYm9keSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVhZGVyLnJlYWQoKS50aGVuKHByb2Nlc3NUZXh0KVxuICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcignQlJBSUQ6JywgZXJyKVxuICAgICAgICByZWNvbm5lY3QoKVxuICAgICAgfSlcbiAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcignQlJBSUQ6JywgZXJyKVxuICAgICAgcmVjb25uZWN0KClcbiAgICB9KVxuICB9XG5cbiAgcHVibGlzaCAocmFuZ2UsIGJvZHkpIHtcbiAgICBjb25zdCBwYXRjaCA9IEpTT04uc3RyaW5naWZ5KGJvZHkpXG4gICAgZmV0Y2godGhpcy5lbmRwb2ludCwge1xuICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgY3JlZGVudGlhbHM6ICdzYW1lLW9yaWdpbicsXG4gICAgICAgIHBhdGNoZXM6IDFcbiAgICAgIH0sXG4gICAgICBib2R5OiBgQ29udGVudC1MZW5ndGg6ICR7cGF0Y2gubGVuZ3RofVxuQ29udGVudC1SYW5nZToganNvbj0ke3JhbmdlfVxuXG4ke3BhdGNofWBcbiAgICB9KS50aGVuKCgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdCUkFJRDogcGF0Y2ggc2VudDogJywgcmFuZ2UsIGJvZHkpXG4gICAgfSlcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJyYWlkQ2xpZW50XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///978\n")},10:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const BraidClient = __webpack_require__(978)\nconst jsonpatch = __webpack_require__(224)\nconst jsonpointer = __webpack_require__(573)\n\n// TODO use custom handlers instead of auto-creating\n// TODO remove callback in place of walking the JSON and calling each handler\n// TODO make a class, prepare for sync9 and provide `.data`\n\nconst root = async (braidURL, elementMap, callback) => {\n  const braid = new BraidClient(braidURL)\n\n  let data = await braid.currentState()\n  // Initialize elements with the current state.\n  Object.keys(elementMap).forEach(function (targetRange) {\n    // const handler = elementMap[targetRange]\n    // const el = document.getElementById(handler[0])\n    // handler[1](el, braid.publish, targetRange)\n    const handler = elementMap[targetRange]\n    const body = jsonpointer(data, targetRange)\n    handler[2](document.getElementById(handler[0]), null, null, body, data)\n  })\n\n  // Subscribe to patches and update elements accordingly.\n  braid.subscribe((range, body) => {\n    const op = range.endsWith('-') ? 'add' : 'replace'\n    data = jsonpatch.apply(data, { op: op, path: range, value: body })\n    Object.keys(elementMap).forEach(function (targetRange) {\n      if (op === 'add') {\n        if (range.slice(0, -2) !== targetRange) {\n          return\n        }\n      } else if (op === 'replace') {\n        if (range !== targetRange) {\n          return\n        }\n      }\n      const handler = elementMap[targetRange]\n      handler[2](document.getElementById(handler[0]), op, range, body, data)\n    })\n    // callback(data)\n  })\n\n  // Assign handlers to publish patches when an element updates.\n  Object.keys(elementMap).forEach(function (targetRange) {\n    const handler = elementMap[targetRange]\n    const el = document.getElementById(handler[0])\n    handler[1](el, braid.publish, targetRange)\n  })\n}\n\nmodule.exports = root\n\n// XXX Object.keys(elementMap).forEach(function (id) {\n// XXX   const el = document.getElementById(id)\n// XXX   switch (el.tagName) {\n// XXX     case 'INPUT':\n// XXX       el.value = jsonpointer(data, elementMap[id])\n// XXX       break\n// XXX   }\n// XXX })\n// XXX callback(data)\n\n// XXX const el = document.getElementById(id)\n// XXX let li\n// XXX switch (el.tagName) {\n// XXX   case 'UL':\n// XXX     li = document.createElement('LI')\n// XXX     li.appendChild(document.createTextNode(body))\n// XXX     el.appendChild(li)\n// XXX     break\n// XXX }\n// XXX switch (el.tagName) {\n// XXX   case 'INPUT':\n// XXX     el.value = jsonpointer(data, range)\n// XXX     break\n// XXX }\n\n// XXX Object.keys(elementMap).forEach(function (id) {\n// XXX   const el = document.getElementById(id)\n// XXX   switch (el.tagName) {\n// XXX     case 'INPUT':\n// XXX       el.addEventListener('input', () => {\n// XXX         braid.publish(elementMap[id], el.value)\n// XXX       })\n// XXX       break\n// XXX   }\n// XXX })\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yb290Ly4vaW5kZXguanM/NDFmNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IsbUJBQU8sQ0FBQyxHQUFtQjtBQUMvQyxrQkFBa0IsbUJBQU8sQ0FBQyxHQUFZO0FBQ3RDLG9CQUFvQixtQkFBTyxDQUFDLEdBQWM7O0FBRTFDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG1DQUFtQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0EsUUFBUSIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJyYWlkQ2xpZW50ID0gcmVxdWlyZSgnYnJhaWQtaHR0cC1jbGllbnQnKVxuY29uc3QganNvbnBhdGNoID0gcmVxdWlyZSgnanNvbi1wYXRjaCcpXG5jb25zdCBqc29ucG9pbnRlciA9IHJlcXVpcmUoJ2pzb24tcG9pbnRlcicpXG5cbi8vIFRPRE8gdXNlIGN1c3RvbSBoYW5kbGVycyBpbnN0ZWFkIG9mIGF1dG8tY3JlYXRpbmdcbi8vIFRPRE8gcmVtb3ZlIGNhbGxiYWNrIGluIHBsYWNlIG9mIHdhbGtpbmcgdGhlIEpTT04gYW5kIGNhbGxpbmcgZWFjaCBoYW5kbGVyXG4vLyBUT0RPIG1ha2UgYSBjbGFzcywgcHJlcGFyZSBmb3Igc3luYzkgYW5kIHByb3ZpZGUgYC5kYXRhYFxuXG5jb25zdCByb290ID0gYXN5bmMgKGJyYWlkVVJMLCBlbGVtZW50TWFwLCBjYWxsYmFjaykgPT4ge1xuICBjb25zdCBicmFpZCA9IG5ldyBCcmFpZENsaWVudChicmFpZFVSTClcblxuICBsZXQgZGF0YSA9IGF3YWl0IGJyYWlkLmN1cnJlbnRTdGF0ZSgpXG4gIC8vIEluaXRpYWxpemUgZWxlbWVudHMgd2l0aCB0aGUgY3VycmVudCBzdGF0ZS5cbiAgT2JqZWN0LmtleXMoZWxlbWVudE1hcCkuZm9yRWFjaChmdW5jdGlvbiAodGFyZ2V0UmFuZ2UpIHtcbiAgICAvLyBjb25zdCBoYW5kbGVyID0gZWxlbWVudE1hcFt0YXJnZXRSYW5nZV1cbiAgICAvLyBjb25zdCBlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGhhbmRsZXJbMF0pXG4gICAgLy8gaGFuZGxlclsxXShlbCwgYnJhaWQucHVibGlzaCwgdGFyZ2V0UmFuZ2UpXG4gICAgY29uc3QgaGFuZGxlciA9IGVsZW1lbnRNYXBbdGFyZ2V0UmFuZ2VdXG4gICAgY29uc3QgYm9keSA9IGpzb25wb2ludGVyKGRhdGEsIHRhcmdldFJhbmdlKVxuICAgIGhhbmRsZXJbMl0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaGFuZGxlclswXSksIG51bGwsIG51bGwsIGJvZHksIGRhdGEpXG4gIH0pXG5cbiAgLy8gU3Vic2NyaWJlIHRvIHBhdGNoZXMgYW5kIHVwZGF0ZSBlbGVtZW50cyBhY2NvcmRpbmdseS5cbiAgYnJhaWQuc3Vic2NyaWJlKChyYW5nZSwgYm9keSkgPT4ge1xuICAgIGNvbnN0IG9wID0gcmFuZ2UuZW5kc1dpdGgoJy0nKSA/ICdhZGQnIDogJ3JlcGxhY2UnXG4gICAgZGF0YSA9IGpzb25wYXRjaC5hcHBseShkYXRhLCB7IG9wOiBvcCwgcGF0aDogcmFuZ2UsIHZhbHVlOiBib2R5IH0pXG4gICAgT2JqZWN0LmtleXMoZWxlbWVudE1hcCkuZm9yRWFjaChmdW5jdGlvbiAodGFyZ2V0UmFuZ2UpIHtcbiAgICAgIGlmIChvcCA9PT0gJ2FkZCcpIHtcbiAgICAgICAgaWYgKHJhbmdlLnNsaWNlKDAsIC0yKSAhPT0gdGFyZ2V0UmFuZ2UpIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChvcCA9PT0gJ3JlcGxhY2UnKSB7XG4gICAgICAgIGlmIChyYW5nZSAhPT0gdGFyZ2V0UmFuZ2UpIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY29uc3QgaGFuZGxlciA9IGVsZW1lbnRNYXBbdGFyZ2V0UmFuZ2VdXG4gICAgICBoYW5kbGVyWzJdKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGhhbmRsZXJbMF0pLCBvcCwgcmFuZ2UsIGJvZHksIGRhdGEpXG4gICAgfSlcbiAgICAvLyBjYWxsYmFjayhkYXRhKVxuICB9KVxuXG4gIC8vIEFzc2lnbiBoYW5kbGVycyB0byBwdWJsaXNoIHBhdGNoZXMgd2hlbiBhbiBlbGVtZW50IHVwZGF0ZXMuXG4gIE9iamVjdC5rZXlzKGVsZW1lbnRNYXApLmZvckVhY2goZnVuY3Rpb24gKHRhcmdldFJhbmdlKSB7XG4gICAgY29uc3QgaGFuZGxlciA9IGVsZW1lbnRNYXBbdGFyZ2V0UmFuZ2VdXG4gICAgY29uc3QgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChoYW5kbGVyWzBdKVxuICAgIGhhbmRsZXJbMV0oZWwsIGJyYWlkLnB1Ymxpc2gsIHRhcmdldFJhbmdlKVxuICB9KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvb3RcblxuLy8gWFhYIE9iamVjdC5rZXlzKGVsZW1lbnRNYXApLmZvckVhY2goZnVuY3Rpb24gKGlkKSB7XG4vLyBYWFggICBjb25zdCBlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKVxuLy8gWFhYICAgc3dpdGNoIChlbC50YWdOYW1lKSB7XG4vLyBYWFggICAgIGNhc2UgJ0lOUFVUJzpcbi8vIFhYWCAgICAgICBlbC52YWx1ZSA9IGpzb25wb2ludGVyKGRhdGEsIGVsZW1lbnRNYXBbaWRdKVxuLy8gWFhYICAgICAgIGJyZWFrXG4vLyBYWFggICB9XG4vLyBYWFggfSlcbi8vIFhYWCBjYWxsYmFjayhkYXRhKVxuXG4vLyBYWFggY29uc3QgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZClcbi8vIFhYWCBsZXQgbGlcbi8vIFhYWCBzd2l0Y2ggKGVsLnRhZ05hbWUpIHtcbi8vIFhYWCAgIGNhc2UgJ1VMJzpcbi8vIFhYWCAgICAgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdMSScpXG4vLyBYWFggICAgIGxpLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGJvZHkpKVxuLy8gWFhYICAgICBlbC5hcHBlbmRDaGlsZChsaSlcbi8vIFhYWCAgICAgYnJlYWtcbi8vIFhYWCB9XG4vLyBYWFggc3dpdGNoIChlbC50YWdOYW1lKSB7XG4vLyBYWFggICBjYXNlICdJTlBVVCc6XG4vLyBYWFggICAgIGVsLnZhbHVlID0ganNvbnBvaW50ZXIoZGF0YSwgcmFuZ2UpXG4vLyBYWFggICAgIGJyZWFrXG4vLyBYWFggfVxuXG4vLyBYWFggT2JqZWN0LmtleXMoZWxlbWVudE1hcCkuZm9yRWFjaChmdW5jdGlvbiAoaWQpIHtcbi8vIFhYWCAgIGNvbnN0IGVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpXG4vLyBYWFggICBzd2l0Y2ggKGVsLnRhZ05hbWUpIHtcbi8vIFhYWCAgICAgY2FzZSAnSU5QVVQnOlxuLy8gWFhYICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuLy8gWFhYICAgICAgICAgYnJhaWQucHVibGlzaChlbGVtZW50TWFwW2lkXSwgZWwudmFsdWUpXG4vLyBYWFggICAgICAgfSlcbi8vIFhYWCAgICAgICBicmVha1xuLy8gWFhYICAgfVxuLy8gWFhYIH0pXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///10\n")},804:module=>{eval("\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yb290Ly4vbm9kZV9tb2R1bGVzL2ZvcmVhY2gvaW5kZXguanM/YmZhZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsT0FBTztBQUM5QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjgwNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZvckVhY2ggKG9iaiwgZm4sIGN0eCkge1xuICAgIGlmICh0b1N0cmluZy5jYWxsKGZuKSAhPT0gJ1tvYmplY3QgRnVuY3Rpb25dJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpdGVyYXRvciBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgICB9XG4gICAgdmFyIGwgPSBvYmoubGVuZ3RoO1xuICAgIGlmIChsID09PSArbCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgZm4uY2FsbChjdHgsIG9ialtpXSwgaSwgb2JqKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAodmFyIGsgaW4gb2JqKSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duLmNhbGwob2JqLCBrKSkge1xuICAgICAgICAgICAgICAgIGZuLmNhbGwoY3R4LCBvYmpba10sIGssIG9iaik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///804\n")},224:function(__unused_webpack_module,exports,__webpack_require__){eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  (function(factory) {\n    var root;\n    root = typeof window !== \"undefined\" && window !== null ? window : typeof __webpack_require__.g !== \"undefined\" && __webpack_require__.g !== null ? __webpack_require__.g : this;\n    if (true) {\n      return factory(exports);\n    } else {}\n  })(function(exports) {\n    var AddPatch, CopyPatch, InvalidPatchError, InvalidPointerError, JSONPatch, JSONPatchError, JSONPointer, MovePatch, PatchConflictError, PatchTestFailed, RemovePatch, ReplacePatch, TestPatch, _isEqual, accessorMatch, apply, compile, escapedSlash, escapedTilde, hasOwnProperty, isArray, isEqual, isObject, isString, operationMap, toString;\n    toString = Object.prototype.toString;\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n    isArray = function(obj) {\n      return toString.call(obj) === '[object Array]';\n    };\n    isObject = function(obj) {\n      return toString.call(obj) === '[object Object]';\n    };\n    isString = function(obj) {\n      return toString.call(obj) === '[object String]';\n    };\n    _isEqual = function(a, b, stack) {\n      var className, key, length, result, size;\n      if (a === b) {\n        return a !== 0 || 1 / a === 1 / b;\n      }\n      if (a === null || b === null) {\n        return a === b;\n      }\n      className = toString.call(a);\n      if (className !== toString.call(b)) {\n        return false;\n      }\n      switch (className) {\n        case '[object String]':\n          String(a) === String(b);\n          break;\n        case '[object Number]':\n          a = +a;\n          b = +b;\n          if (a !== a) {\n            b !== b;\n          } else {\n            if (a === 0) {\n              1 / a === 1 / b;\n            } else {\n              a === b;\n            }\n          }\n          break;\n        case '[object Boolean]':\n          +a === +b;\n      }\n      if (typeof a !== 'object' || typeof b !== 'object') {\n        return false;\n      }\n      length = stack.length;\n      while (length--) {\n        if (stack[length] === a) {\n          return true;\n        }\n      }\n      stack.push(a);\n      size = 0;\n      result = true;\n      if (className === '[object Array]') {\n        size = a.length;\n        result = size === b.length;\n        if (result) {\n          while (size--) {\n            if (!(result = indexOf.call(a, size) >= 0 === indexOf.call(b, size) >= 0 && _isEqual(a[size], b[size], stack))) {\n              break;\n            }\n          }\n        }\n      } else {\n        if (indexOf.call(a, \"constructor\") >= 0 !== indexOf.call(b, \"constructor\") >= 0 || a.constructor !== b.constructor) {\n          return false;\n        }\n        for (key in a) {\n          if (hasOwnProperty.call(a, key)) {\n            size++;\n            if (!(result = hasOwnProperty.call(b, key) && _isEqual(a[key], b[key], stack))) {\n              break;\n            }\n          }\n        }\n        if (result) {\n          for (key in b) {\n            if (hasOwnProperty.call(b, key) && !size--) {\n              break;\n            }\n          }\n          result = !size;\n        }\n      }\n      stack.pop();\n      return result;\n    };\n    isEqual = function(a, b) {\n      return _isEqual(a, b, []);\n    };\n    JSONPatchError = (function(superClass) {\n      extend(JSONPatchError, superClass);\n\n      function JSONPatchError(message) {\n        this.message = message != null ? message : 'JSON patch error';\n        this.name = 'JSONPatchError';\n      }\n\n      return JSONPatchError;\n\n    })(Error);\n    InvalidPointerError = (function(superClass) {\n      extend(InvalidPointerError, superClass);\n\n      function InvalidPointerError(message) {\n        this.message = message != null ? message : 'Invalid pointer';\n        this.name = 'InvalidPointer';\n      }\n\n      return InvalidPointerError;\n\n    })(Error);\n    InvalidPatchError = (function(superClass) {\n      extend(InvalidPatchError, superClass);\n\n      function InvalidPatchError(message) {\n        this.message = message != null ? message : 'Invalid patch';\n        this.name = 'InvalidPatch';\n      }\n\n      return InvalidPatchError;\n\n    })(JSONPatchError);\n    PatchConflictError = (function(superClass) {\n      extend(PatchConflictError, superClass);\n\n      function PatchConflictError(message) {\n        this.message = message != null ? message : 'Patch conflict';\n        this.name = 'PatchConflictError';\n      }\n\n      return PatchConflictError;\n\n    })(JSONPatchError);\n    PatchTestFailed = (function(superClass) {\n      extend(PatchTestFailed, superClass);\n\n      function PatchTestFailed(message) {\n        this.message = message != null ? message : 'Patch test failed';\n        this.name = 'PatchTestFailed';\n      }\n\n      return PatchTestFailed;\n\n    })(Error);\n    escapedSlash = /~1/g;\n    escapedTilde = /~0/g;\n    accessorMatch = /^[-+]?\\d+$/;\n    JSONPointer = (function() {\n      function JSONPointer(path) {\n        var i, j, len1, step, steps;\n        steps = [];\n        if (path && (steps = path.split('/')).shift() !== '') {\n          throw new InvalidPointerError();\n        }\n        for (i = j = 0, len1 = steps.length; j < len1; i = ++j) {\n          step = steps[i];\n          steps[i] = step.replace(escapedSlash, '/').replace(escapedTilde, '~');\n        }\n        this.accessor = steps.pop();\n        this.steps = steps;\n        this.path = path;\n      }\n\n      JSONPointer.prototype.getReference = function(parent) {\n        var j, len1, ref, step;\n        ref = this.steps;\n        for (j = 0, len1 = ref.length; j < len1; j++) {\n          step = ref[j];\n          if (isArray(parent)) {\n            step = parseInt(step, 10);\n          }\n          if (!(step in parent)) {\n            throw new PatchConflictError('Array location out of bounds or not an instance property');\n          }\n          parent = parent[step];\n        }\n        return parent;\n      };\n\n      JSONPointer.prototype.coerce = function(reference, accessor) {\n        if (isArray(reference)) {\n          if (isString(accessor)) {\n            if (accessor === '-') {\n              accessor = reference.length;\n            } else if (accessorMatch.test(accessor)) {\n              accessor = parseInt(accessor, 10);\n            } else {\n              throw new InvalidPointerError('Invalid array index number');\n            }\n          }\n        }\n        return accessor;\n      };\n\n      return JSONPointer;\n\n    })();\n    JSONPatch = (function() {\n      function JSONPatch(patch) {\n        if (!('path' in patch)) {\n          throw new InvalidPatchError();\n        }\n        this.validate(patch);\n        this.patch = patch;\n        this.path = new JSONPointer(patch.path);\n        this.initialize(patch);\n      }\n\n      JSONPatch.prototype.initialize = function() {};\n\n      JSONPatch.prototype.validate = function(patch) {};\n\n      JSONPatch.prototype.apply = function(document) {\n        throw new Error('Method not implemented');\n      };\n\n      return JSONPatch;\n\n    })();\n    AddPatch = (function(superClass) {\n      extend(AddPatch, superClass);\n\n      function AddPatch() {\n        return AddPatch.__super__.constructor.apply(this, arguments);\n      }\n\n      AddPatch.prototype.validate = function(patch) {\n        if (!('value' in patch)) {\n          throw new InvalidPatchError();\n        }\n      };\n\n      AddPatch.prototype.apply = function(document) {\n        var accessor, reference, value;\n        reference = this.path.getReference(document);\n        accessor = this.path.accessor;\n        value = this.patch.value;\n        if (isArray(reference)) {\n          accessor = this.path.coerce(reference, accessor);\n          if (accessor < 0 || accessor > reference.length) {\n            throw new PatchConflictError(\"Index \" + accessor + \" out of bounds\");\n          }\n          reference.splice(accessor, 0, value);\n        } else if (accessor == null) {\n          document = value;\n        } else {\n          reference[accessor] = value;\n        }\n        return document;\n      };\n\n      return AddPatch;\n\n    })(JSONPatch);\n    RemovePatch = (function(superClass) {\n      extend(RemovePatch, superClass);\n\n      function RemovePatch() {\n        return RemovePatch.__super__.constructor.apply(this, arguments);\n      }\n\n      RemovePatch.prototype.apply = function(document) {\n        var accessor, reference;\n        reference = this.path.getReference(document);\n        accessor = this.path.accessor;\n        if (isArray(reference)) {\n          accessor = this.path.coerce(reference, accessor);\n          if (accessor >= reference.length) {\n            throw new PatchConflictError(\"Value at \" + accessor + \" does not exist\");\n          }\n          reference.splice(accessor, 1);\n        } else {\n          if (!(accessor in reference)) {\n            throw new PatchConflictError(\"Value at \" + accessor + \" does not exist\");\n          }\n          delete reference[accessor];\n        }\n        return document;\n      };\n\n      return RemovePatch;\n\n    })(JSONPatch);\n    ReplacePatch = (function(superClass) {\n      extend(ReplacePatch, superClass);\n\n      function ReplacePatch() {\n        return ReplacePatch.__super__.constructor.apply(this, arguments);\n      }\n\n      ReplacePatch.prototype.validate = function(patch) {\n        if (!('value' in patch)) {\n          throw new InvalidPatchError();\n        }\n      };\n\n      ReplacePatch.prototype.apply = function(document) {\n        var accessor, reference, value;\n        reference = this.path.getReference(document);\n        accessor = this.path.accessor;\n        value = this.patch.value;\n        if (accessor == null) {\n          return value;\n        }\n        if (isArray(reference)) {\n          accessor = this.path.coerce(reference, accessor);\n          if (accessor >= reference.length) {\n            throw new PatchConflictError(\"Value at \" + accessor + \" does not exist\");\n          }\n          reference.splice(accessor, 1, value);\n        } else {\n          if (!(accessor in reference)) {\n            throw new PatchConflictError(\"Value at \" + accessor + \" does not exist\");\n          }\n          reference[accessor] = value;\n        }\n        return document;\n      };\n\n      return ReplacePatch;\n\n    })(JSONPatch);\n    TestPatch = (function(superClass) {\n      extend(TestPatch, superClass);\n\n      function TestPatch() {\n        return TestPatch.__super__.constructor.apply(this, arguments);\n      }\n\n      TestPatch.prototype.validate = function(patch) {\n        if (!('value' in patch)) {\n          throw new InvalidPatchError(\"'value' member is required\");\n        }\n      };\n\n      TestPatch.prototype.apply = function(document) {\n        var accessor, reference, value;\n        reference = this.path.getReference(document);\n        accessor = this.path.accessor;\n        value = this.patch.value;\n        if (isArray(reference)) {\n          accessor = this.path.coerce(reference, accessor);\n        }\n        if (!isEqual(reference[accessor], value)) {\n          throw new PatchTestFailed();\n        }\n        return document;\n      };\n\n      return TestPatch;\n\n    })(JSONPatch);\n    MovePatch = (function(superClass) {\n      extend(MovePatch, superClass);\n\n      function MovePatch() {\n        return MovePatch.__super__.constructor.apply(this, arguments);\n      }\n\n      MovePatch.prototype.initialize = function(patch) {\n        var i, j, len, ref, within;\n        this.from = new JSONPointer(patch.from);\n        len = this.from.steps.length;\n        within = true;\n        for (i = j = 0, ref = len; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\n          if (this.from.steps[i] !== this.path.steps[i]) {\n            within = false;\n            break;\n          }\n        }\n        if (within) {\n          if (this.path.steps.length !== len) {\n            throw new InvalidPatchError(\"'to' member cannot be a descendent of 'path'\");\n          }\n          if (this.from.accessor === this.path.accessor) {\n            return this.apply = function(document) {\n              return document;\n            };\n          }\n        }\n      };\n\n      MovePatch.prototype.validate = function(patch) {\n        if (!('from' in patch)) {\n          throw new InvalidPatchError(\"'from' member is required\");\n        }\n      };\n\n      MovePatch.prototype.apply = function(document) {\n        var accessor, reference, value;\n        reference = this.from.getReference(document);\n        accessor = this.from.accessor;\n        if (isArray(reference)) {\n          accessor = this.from.coerce(reference, accessor);\n          if (accessor >= reference.length) {\n            throw new PatchConflictError(\"Value at \" + accessor + \" does not exist\");\n          }\n          value = reference.splice(accessor, 1)[0];\n        } else {\n          if (!(accessor in reference)) {\n            throw new PatchConflictError(\"Value at \" + accessor + \" does not exist\");\n          }\n          value = reference[accessor];\n          delete reference[accessor];\n        }\n        reference = this.path.getReference(document);\n        accessor = this.path.accessor;\n        if (isArray(reference)) {\n          accessor = this.path.coerce(reference, accessor);\n          if (accessor < 0 || accessor > reference.length) {\n            throw new PatchConflictError(\"Index \" + accessor + \" out of bounds\");\n          }\n          reference.splice(accessor, 0, value);\n        } else {\n          if (accessor in reference) {\n            throw new PatchConflictError(\"Value at \" + accessor + \" exists\");\n          }\n          reference[accessor] = value;\n        }\n        return document;\n      };\n\n      return MovePatch;\n\n    })(JSONPatch);\n    CopyPatch = (function(superClass) {\n      extend(CopyPatch, superClass);\n\n      function CopyPatch() {\n        return CopyPatch.__super__.constructor.apply(this, arguments);\n      }\n\n      CopyPatch.prototype.apply = function(document) {\n        var accessor, reference, value;\n        reference = this.from.getReference(document);\n        accessor = this.from.accessor;\n        if (isArray(reference)) {\n          accessor = this.from.coerce(reference, accessor);\n          if (accessor >= reference.length) {\n            throw new PatchConflictError(\"Value at \" + accessor + \" does not exist\");\n          }\n          value = reference.slice(accessor, accessor + 1)[0];\n        } else {\n          if (!(accessor in reference)) {\n            throw new PatchConflictError(\"Value at \" + accessor + \" does not exist\");\n          }\n          value = reference[accessor];\n        }\n        reference = this.path.getReference(document);\n        accessor = this.path.accessor;\n        if (isArray(reference)) {\n          accessor = this.path.coerce(reference, accessor);\n          if (accessor < 0 || accessor > reference.length) {\n            throw new PatchConflictError(\"Index \" + accessor + \" out of bounds\");\n          }\n          reference.splice(accessor, 0, value);\n        } else {\n          if (accessor in reference) {\n            throw new PatchConflictError(\"Value at \" + accessor + \" exists\");\n          }\n          reference[accessor] = value;\n        }\n        return document;\n      };\n\n      return CopyPatch;\n\n    })(MovePatch);\n    operationMap = {\n      add: AddPatch,\n      remove: RemovePatch,\n      replace: ReplacePatch,\n      move: MovePatch,\n      copy: CopyPatch,\n      test: TestPatch\n    };\n    compile = function(patch) {\n      var j, klass, len1, ops, p;\n      if (!isArray(patch)) {\n        if (isObject(patch)) {\n          patch = [patch];\n        } else {\n          throw new InvalidPatchError('patch must be an object or array');\n        }\n      }\n      ops = [];\n      for (j = 0, len1 = patch.length; j < len1; j++) {\n        p = patch[j];\n        if (!(klass = operationMap[p.op])) {\n          throw new InvalidPatchError('invalid operation: ' + p.op);\n        }\n        ops.push(new klass(p));\n      }\n      return function(document) {\n        var k, len2, op, result;\n        result = document;\n        for (k = 0, len2 = ops.length; k < len2; k++) {\n          op = ops[k];\n          result = op.apply(result);\n        }\n        return result;\n      };\n    };\n    apply = function(document, patch) {\n      return compile(patch)(document);\n    };\n    exports.version = '0.7.0';\n    exports.apply = apply;\n    exports.compile = compile;\n    exports.JSONPointer = JSONPointer;\n    exports.JSONPatch = JSONPatch;\n    exports.JSONPatchError = JSONPatchError;\n    exports.InvalidPointerError = InvalidPointerError;\n    exports.InvalidPatchError = InvalidPatchError;\n    exports.PatchConflictError = PatchConflictError;\n    exports.PatchTestFailed = PatchTestFailed;\n    return exports;\n  });\n\n}).call(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///224\n")},573:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar each = __webpack_require__(804);\nmodule.exports = api;\n\n\n/**\n * Convenience wrapper around the api.\n * Calls `.get` when called with an `object` and a `pointer`.\n * Calls `.set` when also called with `value`.\n * If only supplied `object`, returns a partially applied function, mapped to the object.\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @param value\n * @returns {*}\n */\n\nfunction api (obj, pointer, value) {\n    // .set()\n    if (arguments.length === 3) {\n        return api.set(obj, pointer, value);\n    }\n    // .get()\n    if (arguments.length === 2) {\n        return api.get(obj, pointer);\n    }\n    // Return a partially applied function on `obj`.\n    var wrapped = api.bind(api, obj);\n\n    // Support for oo style\n    for (var name in api) {\n        if (api.hasOwnProperty(name)) {\n            wrapped[name] = api[name].bind(wrapped, obj);\n        }\n    }\n    return wrapped;\n}\n\n\n/**\n * Lookup a json pointer in an object\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @returns {*}\n */\napi.get = function get (obj, pointer) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);\n\n    for (var i = 0; i < refTokens.length; ++i) {\n        var tok = refTokens[i];\n        if (!(typeof obj == 'object' && tok in obj)) {\n            throw new Error('Invalid reference token: ' + tok);\n        }\n        obj = obj[tok];\n    }\n    return obj;\n};\n\n/**\n * Sets a value on an object\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @param value\n */\napi.set = function set (obj, pointer, value) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer),\n      nextTok = refTokens[0];\n\n    if (refTokens.length === 0) {\n      throw Error('Can not set the root object');\n    }\n\n    for (var i = 0; i < refTokens.length - 1; ++i) {\n        var tok = refTokens[i];\n        if (tok === \"__proto__\" || tok === \"constructor\" || tok === \"prototype\") {\n            continue\n        }\n        if (tok === '-' && Array.isArray(obj)) {\n          tok = obj.length;\n        }\n        nextTok = refTokens[i + 1];\n\n        if (!(tok in obj)) {\n            if (nextTok.match(/^(\\d+|-)$/)) {\n                obj[tok] = [];\n            } else {\n                obj[tok] = {};\n            }\n        }\n        obj = obj[tok];\n    }\n    if (nextTok === '-' && Array.isArray(obj)) {\n      nextTok = obj.length;\n    }\n    obj[nextTok] = value;\n    return this;\n};\n\n/**\n * Removes an attribute\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n */\napi.remove = function (obj, pointer) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);\n    var finalToken = refTokens[refTokens.length -1];\n    if (finalToken === undefined) {\n        throw new Error('Invalid JSON pointer for remove: \"' + pointer + '\"');\n    }\n\n    var parent = api.get(obj, refTokens.slice(0, -1));\n    if (Array.isArray(parent)) {\n      var index = +finalToken;\n      if (finalToken === '' && isNaN(index)) {\n        throw new Error('Invalid array index: \"' + finalToken + '\"');\n      }\n\n      Array.prototype.splice.call(parent, index, 1);\n    } else {\n      delete parent[finalToken];\n    }\n};\n\n/**\n * Returns a (pointer -> value) dictionary for an object\n *\n * @param obj\n * @param {function} descend\n * @returns {}\n */\napi.dict = function dict (obj, descend) {\n    var results = {};\n    api.walk(obj, function (value, pointer) {\n        results[pointer] = value;\n    }, descend);\n    return results;\n};\n\n/**\n * Iterates over an object\n * Iterator: function (value, pointer) {}\n *\n * @param obj\n * @param {function} iterator\n * @param {function} descend\n */\napi.walk = function walk (obj, iterator, descend) {\n    var refTokens = [];\n\n    descend = descend || function (value) {\n        var type = Object.prototype.toString.call(value);\n        return type === '[object Object]' || type === '[object Array]';\n    };\n\n    (function next (cur) {\n        each(cur, function (value, key) {\n            refTokens.push(String(key));\n            if (descend(value)) {\n                next(value);\n            } else {\n                iterator(value, api.compile(refTokens));\n            }\n            refTokens.pop();\n        });\n    }(obj));\n};\n\n/**\n * Tests if an object has a value for a json pointer\n *\n * @param obj\n * @param pointer\n * @returns {boolean}\n */\napi.has = function has (obj, pointer) {\n    try {\n        api.get(obj, pointer);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\n/**\n * Escapes a reference token\n *\n * @param str\n * @returns {string}\n */\napi.escape = function escape (str) {\n    return str.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n};\n\n/**\n * Unescapes a reference token\n *\n * @param str\n * @returns {string}\n */\napi.unescape = function unescape (str) {\n    return str.replace(/~1/g, '/').replace(/~0/g, '~');\n};\n\n/**\n * Converts a json pointer into a array of reference tokens\n *\n * @param pointer\n * @returns {Array}\n */\napi.parse = function parse (pointer) {\n    if (pointer === '') { return []; }\n    if (pointer.charAt(0) !== '/') { throw new Error('Invalid JSON pointer: ' + pointer); }\n    return pointer.substring(1).split(/\\//).map(api.unescape);\n};\n\n/**\n * Builds a json pointer from a array of reference tokens\n *\n * @param refTokens\n * @returns {string}\n */\napi.compile = function compile (refTokens) {\n    if (refTokens.length === 0) { return ''; }\n    return '/' + refTokens.map(api.escape).join('/');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///573\n")}},__webpack_module_cache__={};function __webpack_require__(g){var I=__webpack_module_cache__[g];if(void 0!==I)return I.exports;var n=__webpack_module_cache__[g]={exports:{}};return __webpack_modules__[g].call(n.exports,n,n.exports,__webpack_require__),n.exports}__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(g){if("object"==typeof window)return window}}();var __webpack_exports__=__webpack_require__(10);root=__webpack_exports__})();